/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kasir;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author NA
 */
public class kasir_view extends javax.swing.JFrame {
    String nol_jam="";
    String nol_menit="";
    String nol_detik="";
    String Tanggal;
    String Jam;
    String usr;
    String SQL;
    int id;
    String kd_barang;
    String nm_barang;
    int hrg_barang;
    int jml_barang;
    int tot_belanja;
    int bayar;
    int kembalian;
    int stok;
    
    private DefaultTableModel dtm = new DefaultTableModel()
    {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    };

    /**
     * Creates new form kasir_view
     */
//    public kasir_view() {
//        initComponents();
//        
//    }

    kasir_view(String user) {
        initComponents();
        setTanggal();
        setJam();
        usr = user;
        setKasir();
        setIdStruk();
        tID_Barang.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                //karena menggunakan sistem Barcode jadi menggunakan enter untuk input
                kd_barang = tID_Barang.getText();
                String SQL = "SELECT * FROM barang WHERE KD_BARANG='"+kd_barang+"'";
                
                ResultSet rs = connection.executeQuery(SQL);
                try {
                    while (rs.next()) {
                        nm_barang = rs.getString(3);
                        hrg_barang = Integer.parseInt(rs.getString(6));
                    }
                } catch (Exception ex) {
                    Logger.getLogger(kasir_view.class.getName()).log(Level.SEVERE, null, ex);
                }
                tNamaBarang.setText(nm_barang);
                tHargaBarang.setText(hrg_barang+"");
            }
        });
        btHitung.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lTanggal = new javax.swing.JLabel();
        lJam = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        tNamaBarang = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        tHargaBarang = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        tJumlahBarang = new javax.swing.JSpinner();
        lStruk = new javax.swing.JLabel();
        tID_Barang = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        lKasir = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tbDetail = new javax.swing.JTable();
        tTotalBelanja = new javax.swing.JTextField();
        tBayar = new javax.swing.JTextField();
        btHitung = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbTransaksi = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btClear = new javax.swing.JButton();
        btTambah = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbBarang = new javax.swing.JTable();
        btCari = new javax.swing.JButton();
        tCari = new javax.swing.JTextField();
        btRefresh = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jPanel1.setLayout(null);

        jPanel3.setBackground(new java.awt.Color(153, 153, 153));
        jPanel3.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("NA KASIR");
        jPanel3.add(jLabel1);
        jLabel1.setBounds(10, 11, 92, 33);

        lTanggal.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lTanggal.setForeground(new java.awt.Color(255, 255, 255));
        lTanggal.setText("Tanggal");
        jPanel3.add(lTanggal);
        lTanggal.setBounds(597, 29, 123, 15);

        lJam.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lJam.setForeground(new java.awt.Color(255, 255, 255));
        lJam.setText("Jam");
        jPanel3.add(lJam);
        lJam.setBounds(597, 50, 123, 15);

        jPanel1.add(jPanel3);
        jPanel3.setBounds(0, 0, 730, 70);

        jPanel4.setBackground(new java.awt.Color(204, 204, 255));
        jPanel4.setLayout(null);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Nama Barang");
        jPanel4.add(jLabel3);
        jLabel3.setBounds(10, 67, 80, 15);

        tNamaBarang.setEditable(false);
        jPanel4.add(tNamaBarang);
        tNamaBarang.setBounds(10, 88, 215, 30);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Harga Barang");
        jPanel4.add(jLabel4);
        jLabel4.setBounds(10, 124, 83, 15);

        tHargaBarang.setEditable(false);
        jPanel4.add(tHargaBarang);
        tHargaBarang.setBounds(10, 145, 215, 30);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Jumlah Barang");
        jPanel4.add(jLabel5);
        jLabel5.setBounds(10, 181, 90, 15);
        jPanel4.add(tJumlahBarang);
        tJumlahBarang.setBounds(10, 202, 215, 30);

        lStruk.setBackground(new java.awt.Color(255, 255, 255));
        lStruk.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lStruk.setForeground(new java.awt.Color(102, 102, 102));
        lStruk.setText("Struk");
        jPanel4.add(lStruk);
        lStruk.setBounds(10, 260, 136, 20);

        tID_Barang.setToolTipText("masukkan dan tekan enter");
        jPanel4.add(tID_Barang);
        tID_Barang.setBounds(10, 31, 215, 30);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("ID_Barang");
        jPanel4.add(jLabel6);
        jLabel6.setBounds(10, 11, 65, 15);

        lKasir.setBackground(new java.awt.Color(255, 255, 255));
        lKasir.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lKasir.setForeground(new java.awt.Color(102, 102, 102));
        lKasir.setText("Nama Kasir");
        jPanel4.add(lKasir);
        lKasir.setBounds(10, 240, 136, 15);

        jPanel1.add(jPanel4);
        jPanel4.setBounds(0, 70, 230, 290);

        jPanel5.setBackground(new java.awt.Color(177, 160, 218));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tabel Beli", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        jPanel5.setLayout(null);

        tbDetail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nama Barang", "Harga Barang", "Jumlah", "Total Harga"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tbDetail);

        jPanel5.add(jScrollPane5);
        jScrollPane5.setBounds(6, 17, 487, 151);

        tTotalBelanja.setEditable(false);
        tTotalBelanja.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel5.add(tTotalBelanja);
        tTotalBelanja.setBounds(10, 180, 130, 30);

        tBayar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tBayar.setToolTipText("Masukan Nominal Pembayaran");
        jPanel5.add(tBayar);
        tBayar.setBounds(180, 180, 130, 30);

        btHitung.setText("HITUNG KEMBALIAN");
        btHitung.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btHitungActionPerformed(evt);
            }
        });
        jPanel5.add(btHitung);
        btHitung.setBounds(340, 180, 150, 30);

        tbTransaksi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "Kasir", "Waktu", "Total", "Bayar", "Kembalian"
            }
        ));
        jScrollPane1.setViewportView(tbTransaksi);

        jPanel5.add(jScrollPane1);
        jScrollPane1.setBounds(10, 220, 480, 60);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel2.setText("Total Bayar");
        jPanel5.add(jLabel2);
        jLabel2.setBounds(180, 170, 130, 14);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel7.setText("Total Belanja");
        jPanel5.add(jLabel7);
        jLabel7.setBounds(10, 170, 130, 14);

        jPanel1.add(jPanel5);
        jPanel5.setBounds(230, 70, 500, 290);

        btClear.setText("CLEAR");
        btClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btClearActionPerformed(evt);
            }
        });
        jPanel1.add(btClear);
        btClear.setBounds(140, 370, 80, 30);

        btTambah.setText("TAMBAH");
        btTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btTambahActionPerformed(evt);
            }
        });
        jPanel1.add(btTambah);
        btTambah.setBounds(30, 370, 80, 30);

        jTabbedPane1.addTab("Transaksi", jPanel1);

        jPanel2.setLayout(null);

        tbBarang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Kode Barang", "Kode Suplier", "Nama Barang", "Produsen", "Harga", "Stok"
            }
        ));
        jScrollPane2.setViewportView(tbBarang);

        jPanel2.add(jScrollPane2);
        jScrollPane2.setBounds(0, 50, 730, 360);

        btCari.setText("CARI");
        btCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCariActionPerformed(evt);
            }
        });
        jPanel2.add(btCari);
        btCari.setBounds(550, 10, 57, 30);

        tCari.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tCari.setToolTipText("Masukkan nama atau kode barang");
        jPanel2.add(tCari);
        tCari.setBounds(400, 10, 140, 30);

        btRefresh.setText("REFRESH");
        btRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRefreshActionPerformed(evt);
            }
        });
        jPanel2.add(btRefresh);
        btRefresh.setBounds(620, 10, 90, 30);

        jTabbedPane1.addTab("Data Barang", jPanel2);

        getContentPane().add(jTabbedPane1);
        jTabbedPane1.setBounds(0, 0, 740, 440);

        setSize(new java.awt.Dimension(748, 480));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btClearActionPerformed
        // TODO add your handling code here:
            clear();
    }//GEN-LAST:event_btClearActionPerformed

    private void btTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btTambahActionPerformed
        kd_barang = tID_Barang.getText();
        nm_barang = tNamaBarang.getText();
        hrg_barang = Integer.parseInt(tHargaBarang.getText());
        jml_barang = Integer.parseInt(tJumlahBarang.getValue().toString());
        id = Integer.parseInt(lStruk.getText());
        int sub_total = jml_barang * hrg_barang;
        if (!"".equals(kd_barang)&&jml_barang>0&&!"".equals(nm_barang)) {
            SQL = "SELECT STOK FROM barang WHERE KD_BARANG='"+kd_barang+"'";
            ResultSet rs = connection.executeQuery(SQL);
                try {
                    while (rs.next()) {  
                    stok  = Integer.parseInt(rs.getString(1));
                    }
                } catch (Exception ex) {
                    Logger.getLogger(kasir_view.class.getName()).log(Level.SEVERE, null, ex);
                }
            if (stok>jml_barang) {
                SQL = "INSERT INTO detail_transaksi(KD_TRANSAKSI, KD_BARANG, NM_BARANG, JUMLAH, SUB_TOTAL) "
                    + "VALUES ('"+id+"','"+kd_barang+"','"+nm_barang+"','"+jml_barang+"','"+sub_total+"')";
                int status = connection.execute(SQL);
                stok-=jml_barang;
                if (status > 0) {
                    SQL = "UPDATE barang SET STOK = '"+stok+"' WHERE KD_BARANG ='"+kd_barang+"'";
                    connection.execute(SQL);
                    tampilDetail();
                    tBayar.requestFocus(true);
                    btHitung.setEnabled(true);
                    clear();
                } 
            }
            else{
                JOptionPane.showMessageDialog(null, "Stok Tidak Mencukupi Cek data Barang");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Penuhi data terlebih dahulu dan pastikan jumlah lebih dari 0");
        }
    }//GEN-LAST:event_btTambahActionPerformed

    private void btHitungActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btHitungActionPerformed
        // TODO add your handling code here:
        String namaKasir = lKasir.getText();
        tot_belanja = Integer.parseInt(tTotalBelanja.getText());
        bayar = Integer.parseInt(tBayar.getText());
        kembalian = bayar - tot_belanja;
        if (bayar>=tot_belanja) {
            SQL = "INSERT INTO transaksi(KD_TRANSAKSI, NM_KASIR, TGL_TRANSAKSI, TOTAL, BAYAR, KEMBALIAN) "
                    + "VALUES ('"+id+"','"+namaKasir+"',sysdate(),'"+tot_belanja+"','"+bayar+"','"+kembalian+"')";
            int status = connection.execute(SQL);
            if (status > 0) {
                tampiltransaksi();
                id+=1;
            } else {
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Uang Kurang"+(tot_belanja-bayar));
        }
        
    }//GEN-LAST:event_btHitungActionPerformed

    private void btRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRefreshActionPerformed
        refresh();
        tCari.setText("");
    }//GEN-LAST:event_btRefreshActionPerformed

    private void btCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCariActionPerformed
        cari();
    }//GEN-LAST:event_btCariActionPerformed
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(kasir_view.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(kasir_view.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(kasir_view.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(kasir_view.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new kasir_view().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCari;
    private javax.swing.JButton btClear;
    private javax.swing.JButton btHitung;
    private javax.swing.JButton btRefresh;
    private javax.swing.JButton btTambah;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lJam;
    private javax.swing.JLabel lKasir;
    private javax.swing.JLabel lStruk;
    private javax.swing.JLabel lTanggal;
    private javax.swing.JTextField tBayar;
    private javax.swing.JTextField tCari;
    private javax.swing.JTextField tHargaBarang;
    private javax.swing.JTextField tID_Barang;
    private javax.swing.JSpinner tJumlahBarang;
    private javax.swing.JTextField tNamaBarang;
    private javax.swing.JTextField tTotalBelanja;
    private javax.swing.JTable tbBarang;
    private javax.swing.JTable tbDetail;
    private javax.swing.JTable tbTransaksi;
    // End of variables declaration//GEN-END:variables
    public void setTanggal(){
            java.util.Date skrg = new java.util.Date();
            java.text.SimpleDateFormat kal = new 
            java.text.SimpleDateFormat("dd/MM/yyyy");
            Tanggal = kal.format(skrg);
            lTanggal.setText(Tanggal);
    }
    public void setJam(){//Untk keperluan jam
        ActionListener taskPerformer = new ActionListener() { //ActionListener untuk keperlan Timmer
            public void actionPerformed(ActionEvent e) {
                Date dt = new Date();//Menbat Date
                int nilai_jam = dt.getHours();//Mengambil Nilai Jam Sekarang
                int nilai_menit = dt.getMinutes();//Mengambil Nilai Menit Sekarang
                int nilai_detik = dt.getSeconds();//Mengambil Nilai Detik Sekarang
                if (nilai_jam<=9) {
                    nol_jam = "0";
                }
                if (nilai_menit<=9) {
                    nol_menit= "0";
                }
                if (nilai_detik<=9) {
                   nol_detik= "0";
                }
                String jam = nol_jam+Integer.toString(nilai_jam);
                String menit = nol_menit+Integer.toString(nilai_menit);
                String detik = nol_detik+Integer.toString(nilai_detik);
                Jam = jam+":"+menit+":"+detik;
                lJam.setText(Jam);
            }
        };
        new Timer(100,taskPerformer).start();//timer
    }
    public void setKasir(){
       SQL = "SELECT NM_KASIR FROM admin WHERE USERNAME = '"+usr+"';";
    
        ResultSet rs = connection.executeQuery(SQL);
           try {
               while (rs.next()) {  
                    lKasir.setText(rs.getString(1));
               }
            } catch (Exception ex) {
               Logger.getLogger(kasir_view.class.getName()).log(Level.SEVERE, null, ex);
           }
    }
    public void setIdStruk(){
        SQL = "SELECT MAX(KD_TRANSAKSI) FROM transaksi;";
        ResultSet rs = connection.executeQuery(SQL);
            try {
                while (rs.next()) {  
                    id = Integer.parseInt(rs.getString(1));
                }
            } catch (Exception ex) {
                Logger.getLogger(kasir_view.class.getName()).log(Level.SEVERE, null, ex);
            }
            id+=1;
       lStruk.setText(id+"");
    }

    public void tampilDetail() {
        dtm = (DefaultTableModel)tbDetail.getModel();
        while (dtm.getRowCount() > 0){
            for (int i = 0; i < dtm.getRowCount(); ++i){
                dtm.removeRow(i);
            }
        }
        id = Integer.parseInt(lStruk.getText());
        SQL = "SELECT NM_BARANG,HARGA_JUAL, JUMLAH, SUB_TOTAL FROM detail_transaksi "
                + "NATURAL JOIN barang where KD_TRANSAKSI ='"+id+"'";
        ResultSet rs = connection.executeQuery(SQL);
        try {
            while (rs.next()) {
                String nmbrg = rs.getString(1);
                String hrgbrg = rs.getString(2);
                String jmlbrg =rs.getString(3);
                String ttlhrg = rs.getString(4);
                
                String data[] = {nmbrg,hrgbrg,jmlbrg,ttlhrg};
                dtm.addRow(data);
            }
        } catch (Exception ex) {
            Logger.getLogger(kasir_view.class.getName()).log(Level.SEVERE, null, ex);
        }
        tbDetail.setModel(dtm);
        //GET TOTAL BELANGA
        SQL = "SELECT SUM(SUB_TOTAL) FROM detail_transaksi WHERE KD_TRANSAKSI ="+id;
        rs = connection.executeQuery(SQL);
        try {
            while (rs.next()) {
                tTotalBelanja.setText(rs.getString(1));
            }
        } catch (Exception ex) {
            Logger.getLogger(kasir_view.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void tampiltransaksi() {
        dtm = (DefaultTableModel)tbTransaksi.getModel();
        while (dtm.getRowCount() > 0){
            for (int i = 0; i < dtm.getRowCount(); ++i){
                dtm.removeRow(i);
            }
        }
        id = Integer.parseInt(lStruk.getText());
        SQL = "SELECT * FROM transaksi where KD_TRANSAKSI ='"+id+"'";
        ResultSet rs = connection.executeQuery(SQL);
        try {
            while (rs.next()) {
                String nmkasir = rs.getString(2);
                String tgl = rs.getString(3);
                String total =rs.getString(4);
                String byr = rs.getString(5);
                String kembali = rs.getString(6);
                
                String data[] = {nmkasir,tgl,total,byr,kembali};
                dtm.addRow(data);
            }
        } catch (Exception ex) {
            Logger.getLogger(kasir_view.class.getName()).log(Level.SEVERE, null, ex);
        }
        tbTransaksi.setModel(dtm);
    }

    public void clear() {
        tID_Barang.setText("");
        tNamaBarang.setText("");
        tHargaBarang.setText("");
        tJumlahBarang.setValue(Integer.valueOf("0"));
    }

    public void refresh() {
        dtm = (DefaultTableModel)tbBarang.getModel();
        while (dtm.getRowCount() > 0){
            for (int i = 0; i < dtm.getRowCount(); ++i){
                dtm.removeRow(i);
            }
        }
        SQL = "SELECT * FROM barang";
        ResultSet rs = connection.executeQuery(SQL);
        try {
            while (rs.next()) {
                String kdbrg = rs.getString(1);
                String kdspr = rs.getString(2);
                String nmbrg = rs.getString(3);
                String prod = rs.getString(4);
                String hrg =rs.getString(6);
                String stk = rs.getString(7);
                
                String data[] = {kdbrg,kdspr,nmbrg,prod,hrg,stk};
                dtm.addRow(data);
            }
        } catch (Exception ex) {
            Logger.getLogger(kasir_view.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        tbBarang.setModel(dtm);
    }
    public void cari(){
        dtm = (DefaultTableModel)tbBarang.getModel();
        while (dtm.getRowCount() > 0){
            for (int i = 0; i < dtm.getRowCount(); ++i){
                dtm.removeRow(i);
            }
        }
        String cr = tCari.getText();
        SQL = "SELECT * FROM barang WHERE KD_BARANG = '"+cr+"' OR NM_BARANG REGEXP '"+cr+"';";
        ResultSet rs = connection.executeQuery(SQL);
        try {
            while (rs.next()) {
                String kdbrg = rs.getString(1);
                String kdspr = rs.getString(2);
                String nmbrg = rs.getString(3);
                String prod = rs.getString(4);
                String hrg =rs.getString(6);
                String stk = rs.getString(7);
                
                String data[] = {kdbrg,kdspr,nmbrg,prod,hrg,stk};
                dtm.addRow(data);
            }
        } catch (Exception ex) {
            Logger.getLogger(kasir_view.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        tbBarang.setModel(dtm);
    }
}
